"""
Copyright (c) 2023 Kayque Silva Della Capa

A permissão é concedida, gratuitamente, a qualquer pessoa que obtenha uma cópia
deste software e arquivos de documentação associados (o "Software"), para lidar
com o Software sem restrições, incluindo, sem limitação, os direitos
de usar, copiar, modificar, mesclar, publicar, distribuir, sublicenciar e/ou vender
cópias do Software, e permitir que pessoas a quem o Software é
fornecido o façam, sujeito às seguintes condições:

O aviso de direitos autorais acima e este aviso de permissão devem ser incluídos em todas
cópias ou partes substanciais do Software.

O SOFTWARE É FORNECIDO "COMO ESTÁ", SEM GARANTIA DE QUALQUER TIPO, EXPRESSA OU
IMPLÍCITA, INCLUINDO, MAS NÃO SE LIMITANDO ÀS GARANTIAS DE COMERCIALIZAÇÃO,
ADEQUAÇÃO A UM PROPÓSITO ESPECÍFICO E NÃO VIOLAÇÃO. EM NENHUM CASO OS
AUTORES OU DETENTORES DE DIREITOS AUTORAIS SERÃO RESPONSÁVEIS POR QUALQUER RECLAMAÇÃO,
DANOS OU OUTRA RESPONSABILIDADE, SEJA EM AÇÃO DE CONTRATO, DELITO OU DE OUTRA FORMA,
DECORRENTE DE, OU EM CONEXÃO COM O SOFTWARE OU O USO OU OUTRAS NEGOCIAÇÕES NO
SOFTWARE.
"""
import pandas as pd
import PySimpleGUI as sg
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
import smtplib

clients = pd.read_excel('.\clientes2.xlsx')

def manipular_planilha(caminho_planilha):
    df = pd.read_excel(caminho_planilha)
    df.to_excel(caminho_planilha, index=False)

def enviar_email(client, subject, email_body, email, senha, text_box):
    msg = MIMEMultipart()
    msg['Subject'] = subject 
    msg['From'] = email
    msg['To'] = client['email']
    msg.attach(MIMEText(email_body, 'plain'))

    try:
        server = smtplib.SMTP('smtp.gmail.com', port=587)
        server.starttls()
        server.login(email, senha)
        server.sendmail(msg['From'], msg['To'], msg.as_string())
        print(f'O e-mail foi enviado com sucesso para {client["nome"]}')
        text_box.print(f'O e-mail foi enviado com sucesso para {client["nome"]}\n')
    except Exception as e:
        print(f'Erro ao enviar o e-mail para {client["nome"]}: {str(e)}')
        text_box.print(f'Erro ao enviar o e-mail para {client["nome"]}: {str(e)}\n')
    finally:
        server.quit()

def obter_credenciais():
    sg.theme('DarkBlue4')
    layout = [
        [sg.Text('Digite seu e-mail:')],
        [sg.Input(key='-EMAIL-')],
        [sg.Text('Digite sua senha:')],
        [sg.Input(key='-SENHA-', password_char='*')],
        [sg.Button('OK')]
    ]

    window = sg.Window('auto_email', layout, finalize=True)

    while True:
        event, values = window.read()

        if event == sg.WIN_CLOSED or event == 'OK':
            break

    window.close()
    return values.get('-EMAIL-'), values.get('-SENHA-')

def obter_dados_email():
    sg.theme('DarkBlue4')
    layout = [
        [sg.Text('Digite o assunto do e-mail:')],
        [sg.Input(key='-ASSUNTO-')],
        [sg.Text('Digite o corpo do e-mail:')],
        [sg.Input(key='-CORPO-')],
        [sg.Button('OK')]
    ]

    window = sg.Window('auto_email', layout, finalize=True)

    while True:
        event, values = window.read()

        if event == sg.WIN_CLOSED or event == 'OK':
            break

    window.close()
    return values.get('-ASSUNTO-'), values.get('-CORPO-')

def main():
    caminho_planilha = '.\\clientes2.xlsx'

    manipular_planilha(caminho_planilha)

    email, senha = obter_credenciais()
    subject, email_body = obter_dados_email()

    clients = pd.read_excel(caminho_planilha)

    layout = [
        [sg.Multiline(size=(50, 10), key='-OUTPUT-', disabled=True)],
        [sg.Button('Fechar')]
    ]

    window = sg.Window("Envio de E-mails", layout, finalize=True)

    for index, client in clients.iterrows():
        if pd.notna(client['email']):
            enviar_email(client, subject, f'{email_body}\n\nEnviado por: {email}', email, senha, window['-OUTPUT-'])

    event, values = window.read()

    if event == 'Fechar':
        window.close()

if __name__ == "__main__":
    main()


